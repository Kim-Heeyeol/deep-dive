"use strict";(self.webpackChunkdeep_dive=self.webpackChunkdeep_dive||[]).push([[3917],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=l,k=m["".concat(p,".").concat(d)]||m[d]||i[d]||r;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9303:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},assets:function(){return u},toc:function(){return i},default:function(){return d}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),s=["components"],o={sidebar_position:38},p="37\uc7a5 Set\uacfc Map",c={unversionedId:"week9/chapter37",id:"week9/chapter37",title:"37\uc7a5 Set\uacfc Map",description:"- Set \uac1d\uccb4\ub294 \uc911\ubcf5\ub418\uc9c0 \uc54a\ub294 \uc720\uc77c\ud55c \uac12\ub4e4\uc758 \uc9d1\ud569",source:"@site/docs/week9/chapter37.md",sourceDirName:"week9",slug:"/week9/chapter37",permalink:"/deep-dive/docs/week9/chapter37",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/week9/chapter37.md",tags:[],version:"current",sidebarPosition:38,frontMatter:{sidebar_position:38},sidebar:"tutorialSidebar",previous:{title:"36\uc7a5 \ub514\uc2a4\ud2b8\ub7ed\ucc98\ub9c1 \ud560\ub2f9",permalink:"/deep-dive/docs/week9/chapter36"},next:{title:"38\uc7a5 \ube0c\ub77c\uc6b0\uc800\uc758 \ub80c\ub354\ub9c1 \uacfc\uc815",permalink:"/deep-dive/docs/week9/chapter38"}},u={},i=[{value:"37.1 Set \uac1d\uccb4\uc758 \uc0dd\uc131",id:"371-set-\uac1d\uccb4\uc758-\uc0dd\uc131",level:2},{value:"37.1.2 \uc694\uc18c \uac1c\uc218 \ud655\uc778",id:"3712-\uc694\uc18c-\uac1c\uc218-\ud655\uc778",level:2},{value:"37.1.3 \uc694\uc18c \ucd94\uac00",id:"3713-\uc694\uc18c-\ucd94\uac00",level:2},{value:"37.1.4 \uc694\uc18c \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778",id:"3714-\uc694\uc18c-\uc874\uc7ac-\uc5ec\ubd80-\ud655\uc778",level:2},{value:"37.1.5 \uc694\uc18c \uc0ad\uc81c",id:"3715-\uc694\uc18c-\uc0ad\uc81c",level:2},{value:"37.1.6 \uc694\uc18c \uc77c\uad04 \uc0ad\uc81c",id:"3716-\uc694\uc18c-\uc77c\uad04-\uc0ad\uc81c",level:2},{value:"37.1.7 \uc694\uc18c \uc21c\ud68c",id:"3717-\uc694\uc18c-\uc21c\ud68c",level:2},{value:"37.1.8 \uc9d1\ud569 \uc5f0\uc0b0",id:"3718-\uc9d1\ud569-\uc5f0\uc0b0",level:2},{value:"\uad50\uc9d1\ud569",id:"\uad50\uc9d1\ud569",level:3},{value:"\ud569\uc9d1\ud569",id:"\ud569\uc9d1\ud569",level:3},{value:"\ucc28\uc9d1\ud569",id:"\ucc28\uc9d1\ud569",level:3},{value:"\ubd80\ubd84 \uc9d1\ud569\uacfc \uc0c1\uc704 \uc9d1\ud569",id:"\ubd80\ubd84-\uc9d1\ud569\uacfc-\uc0c1\uc704-\uc9d1\ud569",level:3},{value:"37.2 Map",id:"372-map",level:2},{value:"37.2.1 Map \uac1d\uccb4\uc758 \uc0dd\uc131",id:"3721-map-\uac1d\uccb4\uc758-\uc0dd\uc131",level:3},{value:"37.2.2 \uc694\uc18c \uac1c\uc218 \ud655\uc778",id:"3722-\uc694\uc18c-\uac1c\uc218-\ud655\uc778",level:3},{value:"37.2.3 \uc694\uc18c \ucd94\uac00",id:"3723-\uc694\uc18c-\ucd94\uac00",level:3},{value:"37.2.4 \uc694\uc18c \ucde8\ub4dd",id:"3724-\uc694\uc18c-\ucde8\ub4dd",level:3},{value:"37.2.5 \uc694\uc18c \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778",id:"3725-\uc694\uc18c-\uc874\uc7ac-\uc5ec\ubd80-\ud655\uc778",level:3},{value:"37.2.7 \uc694\uc18c \uc77c\uad04 \uc0ad\uc81c",id:"3727-\uc694\uc18c-\uc77c\uad04-\uc0ad\uc81c",level:3},{value:"37.2.8 \uc694\uc18c \uc21c\ud68c",id:"3728-\uc694\uc18c-\uc21c\ud68c",level:3}],m={toc:i};function d(e){var t=e.components,n=(0,l.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"37\uc7a5-set\uacfc-map"},"37\uc7a5 Set\uacfc Map"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set \uac1d\uccb4\ub294 \uc911\ubcf5\ub418\uc9c0 \uc54a\ub294 \uc720\uc77c\ud55c \uac12\ub4e4\uc758 \uc9d1\ud569"),(0,r.kt)("li",{parentName:"ul"},"\ubc30\uc5f4\uacfc Set \uac1d\uccb4")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\uad6c\ubd84"),(0,r.kt)("th",{parentName:"tr",align:null},"\ubc30\uc5f4"),(0,r.kt)("th",{parentName:"tr",align:null},"Set \uac1d\uccb4"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\ub3d9\uc77c\ud55c \uac12\uc744 \uc911\ubcf5\ud558\uc5ec \ud3ec\ud568\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("td",{parentName:"tr",align:null},"O"),(0,r.kt)("td",{parentName:"tr",align:null},"X")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\uc694\uc18c \uc21c\uc11c\uc5d0 \uc758\ubbf8\uac00 \uc788\ub2e4."),(0,r.kt)("td",{parentName:"tr",align:null},"O"),(0,r.kt)("td",{parentName:"tr",align:null},"X")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\uc778\ub371\uc2a4\ub85c \uc694\uc18c\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("td",{parentName:"tr",align:null},"O"),(0,r.kt)("td",{parentName:"tr",align:null},"X")))),(0,r.kt)("h2",{id:"371-set-\uac1d\uccb4\uc758-\uc0dd\uc131"},"37.1 Set \uac1d\uccb4\uc758 \uc0dd\uc131"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set1 = new Set([1, 2, 3, 4]);\nconsole.log(set1); // Set(3) {1, 2, 3}\n\nconst set2 = new Set(\"hello\");\nconsole.log(set2); // Set(5) {'h', 'e', 'l', 'l', 'o'}\n\nconst set3 = () => [...new Set(array)];\nconsole.log(set3([1, 1, 2, 2, 3, 3])); // [1, 2, 3]\n")),(0,r.kt)("h2",{id:"3712-\uc694\uc18c-\uac1c\uc218-\ud655\uc778"},"37.1.2 \uc694\uc18c \uac1c\uc218 \ud655\uc778"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { size } = new Set([1, 2, 3, 3]);\nconsole.log(size); // 3\n")),(0,r.kt)("h2",{id:"3713-\uc694\uc18c-\ucd94\uac00"},"37.1.3 \uc694\uc18c \ucd94\uac00"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set = new Set();\nconsole.log(set); // Set(0) {}\n\nset.add(1);\nconsole.log(set); // Set(1) {1}\n\nset.add(2).add(3);\nconsole.log(set); // Set(3) {1, 2, 3}\n")),(0,r.kt)("h2",{id:"3714-\uc694\uc18c-\uc874\uc7ac-\uc5ec\ubd80-\ud655\uc778"},"37.1.4 \uc694\uc18c \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set = new Set([1, 2, 3]);\n\nconsole.log(set.has(2)); // true\nconsole.log(set.has(4)); // false\n")),(0,r.kt)("h2",{id:"3715-\uc694\uc18c-\uc0ad\uc81c"},"37.1.5 \uc694\uc18c \uc0ad\uc81c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set = new Set([1, 2, 3, 4, 5]);\n\nset.delete(2);\nconsole.log(set); // Set(4) {1, 3, 4, 5}\n\nset.delete(1);\nconsole.log(set); // Set(3) {3, 4, 5}\n\nset.delete(3).delete(4);\nconsole.log(set); // Set(1) {5}\n")),(0,r.kt)("h2",{id:"3716-\uc694\uc18c-\uc77c\uad04-\uc0ad\uc81c"},"37.1.6 \uc694\uc18c \uc77c\uad04 \uc0ad\uc81c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set = new Set([1, 2, 3]);\n\nset.clear();\nconsole.log(set); // Set(0) {}\n")),(0,r.kt)("h2",{id:"3717-\uc694\uc18c-\uc21c\ud68c"},"37.1.7 \uc694\uc18c \uc21c\ud68c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const set = new Set([1, 2, 3]);\n\nset.forEach((v, v2, set)) => console.log(v, v2, set);\n\n/**\n* 1 1 Set(3) {1, 2, 3}\n* 2 2 Set(3) {1, 2, 3}\n* 3 3 Set(3) {1, 2, 3}\n*/\n")),(0,r.kt)("h2",{id:"3718-\uc9d1\ud569-\uc5f0\uc0b0"},"37.1.8 \uc9d1\ud569 \uc5f0\uc0b0"),(0,r.kt)("h3",{id:"\uad50\uc9d1\ud569"},"\uad50\uc9d1\ud569"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.intersection = function (set) {\n  const result = new Set();\n\n  for (const value of set) {\n    if (this.has(value)) result.add(value);\n  }\n\n  return result;\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.intersection(setB)); // Set(2) {2, 4}\nconsole.log(setB.intersection(setA)); // Set(2) {2, 4}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.intersection = function (set) {\n  return new Set([...this]).filter((v) => set.has(v));\n};\n\nconsole.log(setA.intersection(setB)); // Set(2) {2, 4}\nconsole.log(setB.intersection(setA)); // Set(2) {2, 4}\n")),(0,r.kt)("h3",{id:"\ud569\uc9d1\ud569"},"\ud569\uc9d1\ud569"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.union = function (set) {\n  const result = new Set(this);\n\n  for (const value of set) {\n    result.add(value);\n  }\n\n  return result;\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.union(setB)); // Set(4) {1, 2, 3, 4}\nconsole.log(setB.union(setA)); // Set(4) {1, 2, 3, 4}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.union = function (set) {\n  return new Set([...this, ...set]);\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.union(setB)); // Set(4) {1, 2, 3, 4}\nconsole.log(setB.union(setA)); // Set(4) {1, 2, 3, 4}\n")),(0,r.kt)("h3",{id:"\ucc28\uc9d1\ud569"},"\ucc28\uc9d1\ud569"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.difference = function (set) {\n  const result = new Set(this);\n\n  for (const value of set) {\n    result.delete(value);\n  }\n\n  return result;\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.difference(setB)); // Set(2) {1, 3}\nconsole.log(setB.difference(setA)); // Set(0) {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.difference = function (set) {\n  return new Set([...this].filter((v) => !set.has(v)));\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.difference(setB)); // Set(2) {1, 3}\nconsole.log(setB.difference(setA)); // Set(0) {}\n")),(0,r.kt)("h3",{id:"\ubd80\ubd84-\uc9d1\ud569\uacfc-\uc0c1\uc704-\uc9d1\ud569"},"\ubd80\ubd84 \uc9d1\ud569\uacfc \uc0c1\uc704 \uc9d1\ud569"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.isSuperset = function (subset) {\n  for (const value of subset) {\n    if (!this.has(value)) return false;\n  }\n\n  return true;\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.isSuperset(setB)); // true\nconsole.log(setB.isSuperset(setA)); // false\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Set.prototype.isSuperset = function (subset) {\n  const supersetArr = [...this];\n  return [...subset].every((v) => supersetArr.includes(v));\n};\n\nconst setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([2, 4]);\n\nconsole.log(setA.isSuperset(setB)); // true\nconsole.log(setB.isSuperset(setA)); // false\n")),(0,r.kt)("h2",{id:"372-map"},"37.2 Map"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Map \uac1d\uccb4\ub294 \ud0a4\uc640 \uc30d\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9c4 \uceec\ub809\uc158."),(0,r.kt)("li",{parentName:"ul"},"\uac1d\uccb4\uc640 Map \uac1d\uccb4")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\uad6c\ubd84"),(0,r.kt)("th",{parentName:"tr",align:null},"\ubc30\uc5f4"),(0,r.kt)("th",{parentName:"tr",align:null},"Set \uac1d\uccb4"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\ud0a4\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac12"),(0,r.kt)("td",{parentName:"tr",align:null},"\ubb38\uc790\uc5f4 \ub610\ub294 \uc2ec\ubc8c\uac12"),(0,r.kt)("td",{parentName:"tr",align:null},"\uac1d\uccb4\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 \uac12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\uc774\ud130\ub7ec\ube14"),(0,r.kt)("td",{parentName:"tr",align:null},"X"),(0,r.kt)("td",{parentName:"tr",align:null},"O")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\uc694\uc18c \uac1c\uc218 \ud655\uc778"),(0,r.kt)("td",{parentName:"tr",align:null},"Object.keys(obj).length"),(0,r.kt)("td",{parentName:"tr",align:null},"map.size")))),(0,r.kt)("h3",{id:"3721-map-\uac1d\uccb4\uc758-\uc0dd\uc131"},"37.2.1 Map \uac1d\uccb4\uc758 \uc0dd\uc131"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const map = new Map([\n  ["key1", "value1"],\n  ["key2", "value2"],\n]);\n\nconsole.log(map); // Map(2) {"key1" => "value1", "key2" => "value2"}\nconsole.log(map2) = new Map([1, 2]) // TypeError: Iterator value 1 is not an entry object\n')),(0,r.kt)("h3",{id:"3722-\uc694\uc18c-\uac1c\uc218-\ud655\uc778"},"37.2.2 \uc694\uc18c \uac1c\uc218 \ud655\uc778"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const { size } = new map([\n  ["key1", "value1"],\n  ["key2", "value2"],\n]);\n\nconsole.log(size); // 2\n')),(0,r.kt)("h3",{id:"3723-\uc694\uc18c-\ucd94\uac00"},"37.2.3 \uc694\uc18c \ucd94\uac00"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const map = new Map();\nconsole.log(map); // Map(0) {}\n\nmap.set("key1", "value1");\nconsole.log(map); // Map(1) {"key1" => "value1"}\n\nmap.set("key2", "value2").set("key3", "value3");\nconsole.log(map); // Map(3) {"key1" => "value1", "key2" => "value2", "key3" => "value3",}\n')),(0,r.kt)("h3",{id:"3724-\uc694\uc18c-\ucde8\ub4dd"},"37.2.4 \uc694\uc18c \ucde8\ub4dd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const map = new Map();\n\nconst lee = { name: "Lee" };\nconst kim = { name: "Kim" };\n\nmap.set(lee, "developer").set(kim, "designer");\n\nconsole.log(map.get(lee)); // developer\nconsole.log(map.get(kim)); // designner\n')),(0,r.kt)("h3",{id:"3725-\uc694\uc18c-\uc874\uc7ac-\uc5ec\ubd80-\ud655\uc778"},"37.2.5 \uc694\uc18c \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const map = new Map();\n\nconst lee = { name: "Lee" };\nconst kim = { name: "Kim" };\n\nmap.set(lee, "developer").set(kim, "designer");\n\nconsole.log(map.has(lee)); // true\nconsole.log(map.has("key")); // false\n')),(0,r.kt)("h3",{id:"3727-\uc694\uc18c-\uc77c\uad04-\uc0ad\uc81c"},"37.2.7 \uc694\uc18c \uc77c\uad04 \uc0ad\uc81c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const map = new Map();\n\nconst lee = { name: "Lee" };\nconst kim = { name: "Kim" };\n\nmap.set(lee, "developer").set(kim, "designer");\nmap.clear();\n\nconsole.log(map); // Map(0) {}\n')),(0,r.kt)("h3",{id:"3728-\uc694\uc18c-\uc21c\ud68c"},"37.2.8 \uc694\uc18c \uc21c\ud68c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const lee = { name: \"Lee\" };\nconst kim = { name: \"Kim\" };\n\nconst map = new Map([\n  [lee, \"developer\"],\n  [kim, \"designer\"],\n]);\n\nmap.forEach((v, k, map) => console.log(v, k, map));\n\n/*\ndeveloper {name: 'Lee'} Map(2) {\n  {name: 'Lee'} => 'developer',\n  {name: 'Kim'} => 'designer'\n}\n\ndesigner {name: 'Kim'} Map(2) {\n  {name: 'Lee'} => 'developer',\n  {name: 'Kim'} => 'designer'\n}\n*/\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Map \uba54\uc11c\ub4dc"),(0,r.kt)("th",{parentName:"tr",align:null},"\ubc30\uc5f4"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Map.prototype.keys"),(0,r.kt)("td",{parentName:"tr",align:null},"Map \uac1d\uccb4\uc5d0\uc11c \uc694\uc18c\ud0a4\ub97c \uac16\ub294 \uc774\ud130\ub7ec\ube14, \uc774\ud130\ub808\uc774\ud130 \uac1d\uccb4 \ubc18\ud658")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Map.prototype.values"),(0,r.kt)("td",{parentName:"tr",align:null},"Map \uac1d\uccb4\uc5d0\uc11c \uc694\uc18c\uac12\uc744 \uac16\ub294 \uc774\ud130\ub7ec\ube14, \uc774\ud130\ub808\uc774\ud130 \uac1d\uccb4 \ubc18\ud658")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Map.prototype.entries"),(0,r.kt)("td",{parentName:"tr",align:null},"Map \uac1d\uccb4\uc5d0\uc11c \uc694\uc18c\ud0a4, \uc694\uc18c\uac12\uc744 \uac16\ub294 \uc774\ud130\ub7ec\ube14, \uc774\ud130\ub808\uc774\ud130 \uac1d\uccb4 \ubc18\ud658")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const lee = { name: "Lee" };\nconst kim = { name: "Kim" };\n\nconst map = new Map([\n  [lee, "developer"],\n  [kim, "designer"],\n]);\n\nfor (const key of map.keys()) {\n  console.log(key); // {name: "Lee"} {name: "Kim"}\n}\n\nfor (const value of map.values()) {\n  console.log(value); // developer designer\n}\n\nfor (const entry of map.entries()) {\n  console.log(entry); // [{name: "Lee"}, "developer"] [{name: "Kim"}, "designer"]\n}\n')))}d.isMDXComponent=!0}}]);